apiVersion: apps/v1
kind: Deployment
metadata:
  name: env0-nfs-server
  namespace: env0-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      role: env0-nfs-server
  template:
    metadata:
      labels:
        role: env0-nfs-server
    spec:
      nodeSelector:
        topology.kubernetes.io/zone: us-central1-a
      containers:
        - name: nfs-server
          image: ghcr.io/kubernetes-sigs/nfs-ganesha:v3.5
          command: ["/bin/sh"]
          args:
            - 'echo "Start rpcbind"'
            - '/usr/sbin/rpcbind 127.0.0.1'
            - '/usr/sbin/rpc.statd --port 662'
            - 'dbus-daemon --system --nopidfile'
            - | 
                printf "
                ###################################################
                #
                # EXPORT
                #
                # To function, all that is required is an EXPORT
                #
                # Define the absolute minimal export
                #
                ###################################################
                EXPORT
                {
                  # Export Id (mandatory, each EXPORT must have a unique Export_Id)
                  Export_Id = 0;
                  # Exported path (mandatory)
                  Path = /nonexistent;
                  # Pseudo Path (required for NFS v4)
                  Pseudo = /nonexistent;
                  # Required for access (default is None)
                  # Could use CLIENT blocks instead
                  Access_Type = RW;
                  # Exporting FSAL
                  FSAL {
                    Name = VFS;
                  }
                }
                NFS_Core_Param
                {
                  MNT_Port = 20048;
                  NLM_Port = 32803;
                  fsid_device = true;
                }
                NFSV4
                {
                  Grace_Period = 90;
                }" >> /export/vfs.conf
            - 'usr/local/bin/ganesha.nfsd -F -L /export/ganesha.log -p /var/run/ganesha.pid -f /export/vfs.conf'
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_NAME
              value: env0-nfs-server
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace        
          ports:
            - name: nfs
              containerPort: 2049
            - name: mountd
              containerPort: 20048
            - name: rpcbind
              containerPort: 111
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /data
              name: nfs-pvc
          resources:
            limits:
              cpu: 250m
              memory: 1000Mi
      volumes:
        - name: nfs-pvc
          persistentVolumeClaim:
            claimName: env0-pvc-for-nfs-server         
